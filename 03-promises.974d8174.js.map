{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,SAAUC,SAASC,cAAc,WAoB9BF,SAASG,iBAAiB,UAAU,SAAAC,G,kBAjBzC,IAAuBC,EAAUC,GAAVD,EA4BLE,EA5BeD,EA4BZE,EA3BH,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGlCJ,EAAQ,CAACL,WAAUC,UAGnBK,EAAO,CAACN,WAAUC,S,GAErBA,E,KAkBAS,MAAK,SAAAC,GAAUA,EAARX,S,IAAUC,EAAKU,EAALV,MAAaW,EAAAnB,GAASoB,OAAOC,QAAQ,qBAA6BC,OAARb,EAAE,QAAYa,OAANd,EAAM,O,IACzFe,OAAM,SAAAL,GAAUA,EAARX,S,IAAUC,EAAKU,EAALV,MAAaW,EAAAnB,GAASoB,OAAOI,QAAQ,kBAA0BF,OAARb,EAAE,QAAYa,OAANd,EAAM,O,IACxFE,GAASe,C,EAbbnB,EAAEoB,iBACFC,QAAQC,IAAItB,EAAEuB,OAAOC,UAErB,IAAIpB,EAAQqB,OAAOzB,EAAEuB,OAAOC,SAAStB,MAAMwB,OACrCP,EAAOM,OAAOzB,EAAEuB,OAAOC,SAASL,KAAKO,OACrCC,EAASF,OAAOzB,EAAEuB,OAAOC,SAASG,OAAOD,OAE/CL,QAAQC,IAAIlB,EAAOe,EAAMQ,GAEzB,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formElem: document.querySelector('.form'),\n };\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n        // Fulfill\n          resolve({position, delay})\n        } else {\n        // Reject\n          reject({position, delay})\n      }\n    }, delay)  \n  }) \n  //console.log(promise);\n  return promise;\n}\n\nrefs.formElem.addEventListener('submit', e => {\n  e.preventDefault();\n  console.log(e.target.elements);\n\n  let delay = Number(e.target.elements.delay.value);\n  const step = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  console.log(delay, step, amount);\n  \n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({position, delay}) => { Notiflix.Notify.success(`Fulfilled promise ${i} in ${delay} ms`) })\n      .catch(({position, delay}) => { Notiflix.Notify.failure(`Reject promise ${i} in ${delay} ms`) })\n      delay += step;\n    }  \n});\n"],"names":["$iU1Pc","parcelRequire","formElem","document","querySelector","addEventListener","e","position","delay","i","delay1","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","step","preventDefault","console","log","target","elements","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.974d8174.js.map"}